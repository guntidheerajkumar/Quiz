// This file has been autogenerated from a class added in the UI designer.

using System;
using CoreGraphics;
using Foundation;
using BigTed;
using UIKit;
using Newtonsoft.Json;
using System.Collections.Generic;
using Quiz.Models;

namespace Quiz
{
	public partial class ParticipantsViewController : UIViewController
	{
		public ParticipantsViewController(IntPtr handle) : base(handle)
		{
		}


		public override void ViewWillAppear(bool animated)
		{
			base.ViewWillAppear(animated);
			BTProgressHUD.Show(status: "Please wait \n\n Loading Quiz Participants", maskType: ProgressHUD.MaskType.Black);
			this.View.BackgroundColor = UIColor.White;
			Constants.StudentsList.Add(Constants.LoggedInStudent);
			TblParticipants.Source = new ParticipantsTableSource(Constants.StudentsList);
			TblParticipants.ReloadData();
			Generic.TextToSpeech($"Welcome to Smart Student Quiz, we have {Constants.StudentsList.Count} boarded right now.");
			AppDelegate.signal.StudentResponseReceived += (sender, e) => {
				this.InvokeOnMainThread(() => {
					BTProgressHUD.Dismiss();
					var response = (SignalrResponse)e;
					if (e.Command == "BoardingStudents") {
						this.InvokeOnMainThread(() => {
							Constants.StudentsList = JsonConvert.DeserializeObject<List<SmartStudent>>(response.Data.ToString());
							TblParticipants.ReloadData();
							BTProgressHUD.Show(response.TextToSpeech, maskType: ProgressHUD.MaskType.Black);
							Generic.TextToSpeech(response.TextToSpeech);
						});
					}
					if (e.Command == "QuizReadyToStart") {
						this.InvokeOnMainThread(() => {
							this.Title = "Quiz Start";
							BTProgressHUD.Dismiss();
							Generic.TextToSpeech($"Quiz is going to start with {Constants.StudentsList.Count} students");
							Generic.speechSynthesizer.DidFinishSpeechUtterance += (s, ee) => {
								var quizIntervalViewController = UIStoryboard.FromName("Main", null).InstantiateViewController("QuizIntervalViewController");
								NavigationController.PushViewController(quizIntervalViewController, true);
							};
						});
					}
				});
			};

			TblParticipants.TableFooterView = new UIView();
		}
	}

	public class ParticipantsTableSource : UITableViewSource
	{

		List<SmartStudent> TableItems;
		public UINavigationController NavigationController;

		public ParticipantsTableSource(List<SmartStudent> items)
		{
			TableItems = items;
		}

		public override nfloat GetHeightForRow(UITableView tableView, NSIndexPath indexPath)
		{
			return 158;
		}

		public override nint RowsInSection(UITableView tableview, nint section)
		{
			return TableItems.Count;
		}

		public override UITableViewCell GetCell(UITableView tableView, NSIndexPath indexPath)
		{
			SmartStudent item = TableItems[indexPath.Row];
			var cell = (ParticipantsTableViewCell)tableView.DequeueReusableCell(ParticipantsTableViewCell.Key);
			if (cell == null) {
				cell = ParticipantsTableViewCell.Create();
			}

			cell.Model = item;
			cell.BackgroundColor = UIColor.Clear;

			return cell;
		}
	}
}
